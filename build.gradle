plugins {
  id "com.eriwen.gradle.js" version "1.12.1"
}

minifyJs {
  source = ["${projectDir}/js/common.js",
            "${projectDir}/js/feature.js",
            "${projectDir}/js/featureset.js",
            "${projectDir}/js/gme-datasource.js",
            "${projectDir}/js/panel.js",
            "${projectDir}/js/static-datasource.js",
            "${projectDir}/js/store.js",
            "${projectDir}/js/view.js"]
  dest = file("${buildDir}/store-locator.unwrapped.min.js")
  closure.externs = fileTree(dir: "externs") + files("exports.js")
}

task wrap(type: WrapFileTask, dependsOn: minifyJs) {
  inFile = minifyJs.dest
  outFile = file("dist/store-locator.min.js")
  wrapper = '(function($){%output%})(jQuery);'
}

task assemble(dependsOn: wrap)

// TODO(cbro): extract out into a gradle plugin.
class WrapFileTask extends DefaultTask {
  @Input
  String wrapper = '(function(){%output%})()'

  @Input
  File inFile

  @Input
  File outFile

  @TaskAction
  void wrap() {
    outFile.withWriter { out ->
      out.write(wrapper.split('%output%').join(inFile.text))
    }
  }
}
